name: Build OVMF

on:
  workflow_dispatch:

jobs:
  build:
    name: Build OVMF
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      
    steps:
      - name: Installing Dependencies and Updating System
        run: |
          curl -s https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor | sudo tee -a /usr/share/keyrings/llvm-archive-keyring.gpg
          
          echo "Types: deb"                                              | sudo tee -a /etc/apt/sources.list.d/llvm.sources
          echo "URIs: http://apt.llvm.org/noble/"                        | sudo tee -a /etc/apt/sources.list.d/llvm.sources
          echo "Suites: llvm-toolchain-noble"                            | sudo tee -a /etc/apt/sources.list.d/llvm.sources
          echo "Components: main"                                        | sudo tee -a /etc/apt/sources.list.d/llvm.sources
          echo "Signed-By: /usr/share/keyrings/llvm-archive-keyring.gpg" | sudo tee -a /etc/apt/sources.list.d/llvm.sources
          
          sudo apt update
          sudo apt upgrade
          
          sudo apt install build-essential mono-complete uuid-dev iasl nasm clang-format clang-tidy clang-tools clang clangd libc++-dev libc++1 libc++abi-dev libc++abi1 libclang-dev libclang1 libllvm-ocaml-dev libomp-dev libomp5 lld llvm-dev llvm-runtime llvm python3-clang

      - name: Get Latest EDK-II Release
        run: |
          echo "REF=$(curl -s https://api.github.com/repos/tianocore/edk2/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v4.1.7
        with:
          repository: tianocore/edk2
          ref: ${{ env.REF }}
          path: main
          submodules: recursive

      - name: Setup Build Environment
        working-directory: ${{ github.workspace }}/main
        run: |
          git submodule update --init --recursive
          
          echo "*venv*/**" >> .git/info/exclude
          
          python -m venv .venv
          source .venv/bin/activate

          pip install -r pip-requirements.txt --upgrade

          python BaseTools/Edk2ToolsBuild.py -t CLANGPDB

      - name: Build
        working-directory: ${{ github.workspace }}/main
        run: |
          stuart_setup -c OvmfPkg/PlatformCI/PlatformBuild.py -a X64 Target=RELEASE TOOL_CHAIN_TAG=CLANGPDB BLD_*_NETWORK_HTTP_ENABLE=1 BLD_*_TPM1_ENABLE=1 BLD_*_TPM2_ENABLE=1
          stuart_update -c OvmfPkg/PlatformCI/PlatformBuild.py -a X64 Target=RELEASE TOOL_CHAIN_TAG=CLANGPDB BLD_*_NETWORK_HTTP_ENABLE=1 BLD_*_TPM1_ENABLE=1 BLD_*_TPM2_ENABLE=1
          stuart_build -c OvmfPkg/PlatformCI/PlatformBuild.py -a X64 Target=RELEASE TOOL_CHAIN_TAG=CLANGPDB BLD_*_NETWORK_HTTP_ENABLE=1 BLD_*_TPM1_ENABLE=1 BLD_*_TPM2_ENABLE=1

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.REF }}-run${{ github.run_number }}
          name: ${{ env.REF }}-run${{ github.run_number }}
          files: ${{ github.workspace }}/main/Build/**/*
