name: Build OVMF

on:
  workflow_dispatch:

jobs:
  build:
    name: Build OVMF
    runs-on: ubuntu-latest
    container: ghcr.io/archlinux/archlinux:latest
    permissions:
      contents: write

    steps:
      - name: ðŸ’¾ Install Dependencies and Update System
        run: |
          pacman-key --init
          pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
          pacman-key --lsign-key 3056513887B78AEB
          pacman -U --noconfirm "https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst" "https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst"
          echo "[chaotic-aur]"                              >> /etc/pacman.conf
          echo "Include = /etc/pacman.d/chaotic-mirrorlist" >> /etc/pacman.conf

          pacman -Syu --noconfirm mono jq git python make llvm-git lld-git clang-git github-cli

      - name: ðŸ”§ Get Latest EDK-II Release
        run: echo "REF=$(curl -s https://api.github.com/repos/tianocore/edk2/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV

      - name: ðŸšš Check out the Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: tianocore/edk2
          ref: ${{ env.REF }}
          path: main
          submodules: recursive

      - name: ðŸ“¦ Build
        working-directory: main
        run: |
          python -m venv .venv
          source .venv/bin/activate

          pip install -r pip-requirements.txt --upgrade

          python BaseTools/Edk2ToolsBuild.py -t GCC

          stuart_setup ${{ env.stuart_opts }}
          stuart_update ${{ env.stuart_opts }}
          stuart_build ${{ env.stuart_opts }}
        env:
          stuart_opts: -c OvmfPkg/PlatformCI/PlatformBuild.py -a X64 Target=RELEASE TOOL_CHAIN_TAG=CLANGDWARF BLD_*_NETWORK_HTTP_ENABLE=1 BLD_*_TPM1_ENABLE=1 BLD_*_TPM2_ENABLE=1

      - name: ðŸš€ Publish Release
        working-directory: main
        run: gh release create gh-actions-run${{ github.run_number }} Build/OvmfX64/RELEASE_CLANGDWARF/FV/OVMF_CODE.fd Build/OvmfX64/RELEASE_CLANGDWARF/FV/OVMF_VARS.fd Build/OvmfX64/RELEASE_CLANGDWARF/X64/Shell.efi -t ${{ env.REF }} -n "${{ env.REF }} built with $(pacman -Q clang)" -R ${{ github.repository }}
        env:
          GH_TOKEN: ${{ github.token }}
